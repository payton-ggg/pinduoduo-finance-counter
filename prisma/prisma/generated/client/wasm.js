
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  images: 'images',
  olxUrl: 'olxUrl',
  pinduoduoUrl: 'pinduoduoUrl',
  priceUAH: 'priceUAH',
  priceInUA: 'priceInUA',
  workModalWindowIOS: 'workModalWindowIOS',
  soundReducer: 'soundReducer',
  sensesOfEar: 'sensesOfEar',
  wirelessCharger: 'wirelessCharger',
  gyroscope: 'gyroscope',
  weight: 'weight',
  microphoneQuality: 'microphoneQuality',
  sellsCount: 'sellsCount',
  chip: 'chip',
  equipment: 'equipment',
  createdAt: 'createdAt'
};

exports.Prisma.ExpenseScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  amount: 'amount',
  type: 'type',
  createdAt: 'createdAt'
};

exports.Prisma.IncomeScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  amount: 'amount',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Product: 'Product',
  Expense: 'Expense',
  Income: 'Income'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\plato\\Desktop\\pinduoduo\\prisma\\prisma\\generated\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "binary"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\plato\\Desktop\\pinduoduo\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../../.env",
    "schemaEnvPath": "../../../../.env"
  },
  "relativePath": "../../..",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "datasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\ngenerator client {\n  provider   = \"prisma-client-js\"\n  output     = \"./prisma/generated/client\"\n  engineType = \"binary\"\n}\n\nmodel Product {\n  id           String   @id @default(cuid())\n  name         String\n  images       String[] // массив ссылок на фото\n  olxUrl       String?\n  pinduoduoUrl String?\n  priceUAH     Float\n  priceInUA    Float?\n\n  workModalWindowIOS Boolean @default(false)\n  soundReducer       Boolean @default(false)\n  sensesOfEar        Boolean @default(false)\n  wirelessCharger    Boolean @default(false)\n  gyroscope          Boolean @default(false)\n\n  weight            Float?\n  microphoneQuality Int?\n  sellsCount        Int?\n  chip              String?\n  equipment         String?\n\n  expenses  Expense[]\n  incomes   Income[]\n  createdAt DateTime  @default(now())\n}\n\nmodel Expense {\n  id        String   @id @default(cuid())\n  productId String\n  product   Product  @relation(fields: [productId], references: [id])\n  amount    Float\n  type      String\n  createdAt DateTime @default(now())\n}\n\nmodel Income {\n  id        String   @id @default(cuid())\n  productId String\n  product   Product  @relation(fields: [productId], references: [id])\n  amount    Float\n  createdAt DateTime @default(now())\n}\n",
  "inlineSchemaHash": "82f3c48c5033f1366523c43b840d6b3d134e240e8baee7e46027bc41a382fefd",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"olxUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pinduoduoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priceUAH\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"priceInUA\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"workModalWindowIOS\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"soundReducer\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sensesOfEar\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"wirelessCharger\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"gyroscope\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"weight\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"microphoneQuality\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sellsCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"chip\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"equipment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expenses\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ExpenseToProduct\"},{\"name\":\"incomes\",\"kind\":\"object\",\"type\":\"Income\",\"relationName\":\"IncomeToProduct\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Expense\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ExpenseToProduct\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Income\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"IncomeToProduct\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

